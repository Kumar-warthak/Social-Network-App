using System;
using System.IO;
using System.Net;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;

[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPoint]
public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
{
    // Set these from SSIS Variables or hardcoded
    private static string siteUrl = "https://yourtenant.sharepoint.com/sites/yoursite"; // CHANGE THIS
    private static string accessToken = "YOUR_ACCESS_TOKEN"; // Can be pulled from SSIS variable

    public void Main()
    {
        try
        {
            string json = GetSiteUsers();
            Dts.Variables["User::SiteUsersJson"].Value = json;  // Optional: store in variable
            MessageBox.Show("Users fetched successfully.");
            Dts.TaskResult = (int)ScriptResults.Success;
        }
        catch (Exception ex)
        {
            MessageBox.Show("Error: " + ex.Message);
            Dts.TaskResult = (int)ScriptResults.Failure;
        }
    }

    private static string GetSiteUsers()
    {
        string endpoint = $"{siteUrl}/_api/web/siteusers";
        HttpWebRequest request = (HttpWebRequest)WebRequest.Create(endpoint);
        request.Method = "GET";
        request.Accept = "application/json;odata=verbose";
        request.Headers.Add("Authorization", "Bearer " + accessToken);

        using (HttpWebResponse response = (HttpWebResponse)request.GetResponse())
        {
            if (response.StatusCode != HttpStatusCode.OK)
                throw new ApplicationException($"HTTP error: {response.StatusCode}");

            using (StreamReader reader = new StreamReader(response.GetResponseStream()))
            {
                string json = reader.ReadToEnd();
                Console.WriteLine(json); // For Output Window
                return json;
            }
        }
    }

    enum ScriptResults
    {
        Success = DTSExecResult.Success,
        Failure = DTSExecResult.Failure
    }
}
