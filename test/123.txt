using System;
using System.IO;
using System.Net;
using Microsoft.SqlServer.Dts.Runtime;

[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPoint]
public partial class ScriptMain : VSTARTScriptObjectModelBase
{
    public void Main()
    {
        try
        {
            // Replace with your actual site URL and token from variable
            string siteUrl = "https://yourtenant.sharepoint.com/sites/yoursite"; // << CHANGE THIS
            string accessToken = Dts.Variables["User::AccessToken"].Value.ToString(); // Token from SSIS variable

            string json = GetSiteUsersAsJson(siteUrl, accessToken);

            // Optional: save JSON string to SSIS variable
            Dts.Variables["User::SiteUsersJson"].Value = json;

            // Output to console (visible in Debug/SSDT output)
            Console.WriteLine(json);

            Dts.TaskResult = (int)ScriptResults.Success;
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error: " + ex.Message);
            Dts.TaskResult = (int)ScriptResults.Failure;
        }
    }

    private string GetSiteUsersAsJson(string siteUrl, string token)
    {
        string url = $"{siteUrl}/_api/web/siteusers";
        HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);
        request.Method = "GET";
        request.Accept = "application/json;odata=nometadata";
        request.Headers.Add("Authorization", "Bearer " + token);

        using (HttpWebResponse response = (HttpWebResponse)request.GetResponse())
        {
            if (response.StatusCode != HttpStatusCode.OK)
                throw new Exception("HTTP error: " + response.StatusCode);

            using (StreamReader reader = new StreamReader(response.GetResponseStream()))
            {
                return reader.ReadToEnd(); // âœ… Full JSON as string
            }
        }
    }

    enum ScriptResults
    {
        Success = DTSExecResult.Success,
        Failure = DTSExecResult.Failure
    }
}
