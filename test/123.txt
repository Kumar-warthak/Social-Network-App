from selenium import webdriver
from selenium.webdriver.edge.service import Service
from selenium.webdriver.edge.options import Options

edge_options = Options()

# Use clean profile to avoid account sync
edge_options.add_argument("--user-data-dir=C:\\Temp\\EdgeProfile")  # Use any empty folder
edge_options.add_argument("--no-first-run")
edge_options.add_argument("--disable-sync")
edge_options.add_argument("--disable-background-networking")
edge_options.add_argument("--disable-default-apps")
edge_options.add_argument("--disable-popup-blocking")
edge_options.add_argument("--disable-extensions")

# Optional: headless mode if needed
# edge_options.add_argument("--headless=new")

# Path to msedgedriver.exe (must match Edge version)
service = Service("C:\\WebDriver\\msedgedriver.exe")  # Adjust as needed

# Launch Edge
driver = webdriver.Edge(service=service, options=edge_options)

driver.get("https://www.bing.com")
print(driver.title)
driver.quit()      <textarea class="form-control" id="scriptInput" rows="8" placeholder="Enter C# Script Task code here..."></textarea>
    </div>

    <button class="btn btn-primary" onclick="analyzeCode()">Analyze Code</button>

    <div id="result" class="mt-4"></div>
  </div>

  <script>
    async function analyzeCode() {
      const script = document.getElementById("scriptInput").value;
      const resultDiv = document.getElementById("result");
      resultDiv.innerHTML = "<p><em>Analyzing script...</em></p>";

      try {
        const response = await fetch("https://your-api-url.com/analyze", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ sqldata: script })
        });

        if (!response.ok) throw new Error("Failed to fetch data");

        const data = await response.json();
        renderResults(data);
      } catch (err) {
        resultDiv.innerHTML = `<div class="alert alert-danger">Error: ${err.message}</div>`;
      }
    }

    function renderResults(data) {
      const resultDiv = document.getElementById("result");
      resultDiv.innerHTML = `
        <div class="card shadow-sm">
          <div class="card-body">
            <h5 class="section-title">üìù Code Summary</h5>
            <p>${data["Code Summary"] || "No summary provided."}</p>

            <h5 class="section-title">üîß Variables Used</h5>
            <ul class="list-group mb-3">
              ${data.Variables && data.Variables.length > 0
                ? data.Variables.map(v => `<li class="list-group-item"><strong>${v["Variable Name"]}</strong>: ${v.Usage}</li>`).join("")
                : `<li class="list-group-item">No variables found.</li>`}
            </ul>

            <h5 class="section-title">üõ†Ô∏è Methods Explained</h5>
            <ul class="list-group">
              ${data.Methods && data.Methods.length > 0
                ? data.Methods.map(m => `<li class="list-group-item"><strong>${m.Method}</strong>: ${m.Explanation}</li>`).join("")
                : `<li class="list-group-item">No methods explained.</li>`}
            </ul>
          </div>
        </div>
      `;
    }
  </script>

</body>
</html>
