<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Script Task Analyzer</title>
  <link
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
    rel="stylesheet">
  <style>
    body {
      background-color: #f9f9f9;
      padding: 2rem;
      font-family: 'Segoe UI', sans-serif;
    }
    .card {
      margin-top: 1.5rem;
    }
    .section-title {
      font-weight: 600;
      font-size: 1.25rem;
      margin-top: 1rem;
      color: #333;
    }
  </style>
</head>
<body>

  <div class="container">
    <h2 class="mb-4">Analyze Script Task (e.g., SharePoint List Read)</h2>
    
    <div class="mb-3">
      <label for="scriptInput" class="form-label">Paste your C# Script Task code:</label>
      <textarea class="form-control" id="scriptInput" rows="8" placeholder="Enter C# Script Task code here..."></textarea>
    </div>

    <button class="btn btn-primary" onclick="analyzeCode()">Analyze Code</button>

    <div id="result" class="mt-4"></div>
  </div>

  <script>
    async function analyzeCode() {
      const script = document.getElementById("scriptInput").value;
      const resultDiv = document.getElementById("result");
      resultDiv.innerHTML = "<p><em>Analyzing script...</em></p>";

      try {
        const response = await fetch("https://your-api-url.com/analyze", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ sqldata: script })
        });

        if (!response.ok) throw new Error("Failed to fetch data");

        const data = await response.json();
        renderResults(data);
      } catch (err) {
        resultDiv.innerHTML = `<div class="alert alert-danger">Error: ${err.message}</div>`;
      }
    }

    function renderResults(data) {
      const resultDiv = document.getElementById("result");
      resultDiv.innerHTML = `
        <div class="card shadow-sm">
          <div class="card-body">
            <h5 class="section-title">üìù Code Summary</h5>
            <p>${data["Code Summary"] || "No summary provided."}</p>

            <h5 class="section-title">üîß Variables Used</h5>
            <ul class="list-group mb-3">
              ${data.Variables && data.Variables.length > 0
                ? data.Variables.map(v => `<li class="list-group-item"><strong>${v["Variable Name"]}</strong>: ${v.Usage}</li>`).join("")
                : `<li class="list-group-item">No variables found.</li>`}
            </ul>

            <h5 class="section-title">üõ†Ô∏è Methods Explained</h5>
            <ul class="list-group">
              ${data.Methods && data.Methods.length > 0
                ? data.Methods.map(m => `<li class="list-group-item"><strong>${m.Method}</strong>: ${m.Explanation}</li>`).join("")
                : `<li class="list-group-item">No methods explained.</li>`}
            </ul>
          </div>
        </div>
      `;
    }
  </script>

</body>
</html>
