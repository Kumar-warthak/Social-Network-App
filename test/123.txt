import React from "react";
import metadata from "./metadata.json"; // make sure metadata.json is in src/

class ActionProvider {
  constructor(createChatBotMessage, setStateFunc) {
    this.createChatBotMessage = createChatBotMessage;
    this.setState = setStateFunc;
  }

  // ✅ Show Main Menu (Help + Metadata)
  handleInitialMenu = () => {
    const message = this.createChatBotMessage("Hi! I can help you with:", {
      widget: "mainOptions",
    });
    this.updateChatbotState(message);
  };

  // ✅ Help Option
  handleHelp = () => {
    const message = this.createChatBotMessage(
      "This chatbot helps you explore database metadata. You can select a table to see its schema and description."
    );
    this.updateChatbotState(message);
    this.handleMetadataMenu();
  };

  // ✅ Show Metadata Menu (tables as buttons)
  handleMetadataMenu = () => {
    const tables = Object.keys(metadata.tables);
    const options = tables.map((table) => ({
      text: table,
      handler: () => this.handleTableDetails(table),
      id: table,
    }));

    const message = this.createChatBotMessage("Here are the tables:", {
      widget: "options",
      payload: options,
    });
    this.updateChatbotState(message);
  };

  // ✅ Show Table Details
  handleTableDetails = (tableName) => {
    const table = metadata.tables[tableName];
    if (!table) {
      const message = this.createChatBotMessage(
        `Sorry, I couldn't find details for table: ${tableName}`
      );
      this.updateChatbotState(message);
      return;
    }

    // Format schema as text
    let schemaText = table.columns
      .map((col) => `- ${col.name} (${col.type}): ${col.description}`)
      .join("\n");

    const message = this.createChatBotMessage(
      `📌 Table: ${tableName}\n📝 Description: ${table.description}\n\nColumns:\n${schemaText}`
    );
    this.updateChatbotState(message);
  };

  // ✅ Update state
  updateChatbotState(message) {
    this.setState((prevState) => ({
      ...prevState,
      messages: [...prevState.messages, message],
    }));
  }
}

export default ActionProvider;
