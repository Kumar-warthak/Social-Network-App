import React, { useState } from "react";
import Chatbot from "react-chatbot-kit";
import "react-chatbot-kit/build/main.css";

import config from "./chatbot/config";
import MessageParser from "./chatbot/MessageParser";
import ActionProvider from "./chatbot/ActionProvider";

function App() {
  const [showBot, setShowBot] = useState(false);

  return (
    <div style={{ backgroundColor: "#f9f9f9", minHeight: "100vh" }}>
      {/* Floating Chat Button */}
      {!showBot && (
        <button
          onClick={() => setShowBot(true)}
          style={{
            position: "fixed",
            bottom: "20px",
            right: "20px",
            backgroundColor: "#007bff",
            color: "#fff",
            border: "none",
            borderRadius: "50%",
            width: "60px",
            height: "60px",
            fontSize: "24px",
            cursor: "pointer",
            boxShadow: "0px 4px 6px rgba(0,0,0,0.2)",
          }}
        >
          ðŸ’¬
        </button>
      )}

      {/* Chatbot Window */}
      {showBot && (
        <div
          style={{
            position: "fixed",
            bottom: "80px",
            right: "20px",
            width: "400px",
            maxHeight: "600px",
            border: "2px solid #007bff",
            borderRadius: "12px",
            overflow: "hidden",
            backgroundColor: "#fff",
            boxShadow: "0px 8px 15px rgba(0,0,0,0.3)",
            zIndex: 1000,
          }}
        >
          <div
            style={{
              backgroundColor: "#007bff",
              color: "#fff",
              padding: "10px",
              display: "flex",
              justifyContent: "space-between",
              alignItems: "center",
            }}
          >
            <span>Metadata Bot</span>
            <button
              onClick={() => setShowBot(false)}
              style={{
                background: "transparent",
                border: "none",
                color: "#fff",
                fontSize: "18px",
                cursor: "pointer",
              }}
            >
              âœ–
            </button>
          </div>
          <Chatbot
            config={config}
            messageParser={MessageParser}
            actionProvider={ActionProvider}
          />
        </div>
      )}
    </div>
  );
}

export default App;

class ActionProvider {
  constructor(createChatBotMessage, setStateFunc) {
    this.createChatBotMessage = createChatBotMessage;
    this.setState = setStateFunc;
  }

  greet = () => {
    const message = this.createChatBotMessage("Hi! I can help you with:");
    this.addMessage(message);

    const menu = this.createChatBotMessage("Choose an option:", {
      widget: "mainMenu",
    });
    this.addMessage(menu);
  };

  showMetadataMenu = () => {
    const message = this.createChatBotMessage(
      "Here are the tables from metadata:",
      {
        widget: "tablesWidget",
      }
    );
    this.addMessage(message);
  };

  addMessage = (message) => {
    this.setState((prev) => ({
      ...prev,
      messages: [...prev.messages, message],
    }));
  };
}

export default ActionProvider;

class MessageParser {
  constructor(actionProvider) {
    this.actionProvider = actionProvider;
  }

  parse(message) {
    const lowerCaseMessage = message.toLowerCase();

    if (lowerCaseMessage.includes("hi") || lowerCaseMessage.includes("hello")) {
      this.actionProvider.greet();
    } else if (lowerCaseMessage.includes("metadata")) {
      this.actionProvider.showMetadataMenu();
    } else {
      this.actionProvider.greet(); // default menu
    }
  }
}

export default MessageParser;

import { createChatBotMessage } from "react-chatbot-kit";
import MainMenu from "./MainMenu";
import TablesWidget from "./TablesWidget";

const config = {
  botName: "Metadata Bot",
  initialMessages: [
    createChatBotMessage("Hi! I can help you with:", {
      widget: "mainMenu",
    }),
  ],
  customStyles: {
    botMessageBox: {
      backgroundColor: "#007bff",
    },
    chatButton: {
      backgroundColor: "#007bff",
    },
  },
  widgets: [
    {
      widgetName: "mainMenu",
      widgetFunc: (props) => <MainMenu {...props} />,
    },
    {
      widgetName: "tablesWidget",
      widgetFunc: (props) => <TablesWidget {...props} />,
    },
  ],
};

export default config;

import React from "react";

const MainMenu = (props) => {
  const options = [
    { text: "Help about Tool", handler: props.actionProvider.greet, id: 1 },
    { text: "Metadata", handler: props.actionProvider.showMetadataMenu, id: 2 },
  ];

  return (
    <div style={{ padding: "10px" }}>
      {options.map((option) => (
        <button
          key={option.id}
          onClick={option.handler}
          style={{
            margin: "5px",
            padding: "8px 14px",
            borderRadius: "6px",
            border: "1px solid #007bff",
            background: "#f0f8ff",
            cursor: "pointer",
          }}
        >
          {option.text}
        </button>
      ))}
    </div>
  );
};

export default MainMenu;

import React, { useState } from "react";
import metadata from "./metadata.json";

const TablesWidget = () => {
  const [openTable, setOpenTable] = useState(null);

  const toggleTable = (tableName) => {
    setOpenTable(openTable === tableName ? null : tableName);
  };

  return (
    <div style={{ padding: "10px" }}>
      {metadata.tables.map((table, index) => (
        <div
          key={index}
          style={{
            marginBottom: "10px",
            border: "1px solid #28a745",
            borderRadius: "6px",
            overflow: "hidden",
            background: "#f9fff9",
          }}
        >
          {/* Table Header */}
          <button
            onClick={() => toggleTable(table.name)}
            style={{
              width: "100%",
              textAlign: "left",
              padding: "10px",
              background: "#e8f5e9",
              border: "none",
              cursor: "pointer",
              fontWeight: "bold",
            }}
          >
            {table.name} {openTable === table.name ? "â–²" : "â–¼"}
          </button>

          {/* Collapsible Content */}
          {openTable === table.name && (
            <div
              style={{
                padding: "10px",
                background: "#fff",
                borderTop: "1px solid #28a745",
              }}
            >
              <p>
                <strong>Description:</strong> {table.description}
              </p>
              <p>
                <strong>Columns:</strong>
              </p>
              <ul style={{ paddingLeft: "20px", margin: 0 }}>
                {table.columns.map((col, i) => (
                  <li key={i}>
                    <strong>{col.name}</strong>: {col.description}
                  </li>
                ))}
              </ul>
            </div>
          )}
        </div>
      ))}
    </div>
  );
};

export default TablesWidget;

