using System;
using System.Data;
using System.Data.SqlClient;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Text;
using System.Text.Json;
using System.Text.Json.Nodes;
using System.Threading.Tasks;

class Program
{
    static string tenantId = "your-tenant-id";
    static string clientId = "your-client-id";
    static string clientSecret = "your-client-secret";
    static string siteName = "your-site-name"; // yoursite.sharepoint.com:/sites/yoursite
    static string listName = "your-list-name";
    static string sqlConnString = "Server=your-sql-server;Database=your-db;Integrated Security=true;";
    static string storedProc = "YourInsertListItemProc";

    static async Task Main()
    {
        string token = await GetAccessToken();
        string siteId = await GetSiteId(token);
        await FetchAndInsertListItems(siteId, token);
    }

    static async Task<string> GetAccessToken()
    {
        using HttpClient client = new HttpClient();
        var body = new StringContent(
            $"client_id={clientId}&scope=https%3A%2F%2Fgraph.microsoft.com%2F.default&client_secret={clientSecret}&grant_type=client_credentials",
            Encoding.UTF8, "application/x-www-form-urlencoded");

        var result = await client.PostAsync($"https://login.microsoftonline.com/{tenantId}/oauth2/v2.0/token", body);
        var json = await result.Content.ReadAsStringAsync();

        var doc = JsonDocument.Parse(json);
        return doc.RootElement.GetProperty("access_token").GetString();
    }

    static async Task<string> GetSiteId(string token)
    {
        using HttpClient client = new HttpClient();
        client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);

        string url = $"https://graph.microsoft.com/v1.0/sites/{siteName}";
        var response = await client.GetStringAsync(url);
        var doc = JsonDocument.Parse(response);
        return doc.RootElement.GetProperty("id").GetString();
    }

    static async Task FetchAndInsertListItems(string siteId, string token)
    {
        string nextLink = $"https://graph.microsoft.com/v1.0/sites/{siteId}/lists/{listName}/items?expand=fields&$top=5000";

        using HttpClient client = new HttpClient();
        client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);

        using SqlConnection conn = new SqlConnection(sqlConnString);
        conn.Open();

        while (!string.IsNullOrEmpty(nextLink))
        {
            var response = await client.GetStringAsync(nextLink);
            var root = JsonNode.Parse(response).AsObject();

            foreach (var item in root["value"].AsArray())
            {
                string itemJson = item["fields"].ToJsonString();
                using SqlCommand cmd = new SqlCommand(storedProc, conn)
                {
                    CommandType = CommandType.StoredProcedure
                };
                cmd.Parameters.AddWithValue("@ItemJson", itemJson);
                cmd.ExecuteNonQuery();
            }

            nextLink = root.ContainsKey("@odata.nextLink") ? root["@odata.nextLink"]?.ToString() : null;
        }
    }
}
