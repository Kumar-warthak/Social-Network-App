class ActionProvider {
  constructor(createChatBotMessage, setStateFunc) {
    this.createChatBotMessage = createChatBotMessage;
    this.setState = setStateFunc;
  }

  greet = () => {
    const message = this.createChatBotMessage("Hi! I can help you with:");
    this.addMessage(message);

    const menu = this.createChatBotMessage("Choose an option:", {
      widget: "mainMenu",
    });
    this.addMessage(menu);
  };

  showToolsMenu = () => {
    const message = this.createChatBotMessage("Help about Tool:", {
      widget: "toolsMenuWidget",
    });
    this.addMessage(message);
  };

  showMetadataMenu = () => {
    const message = this.createChatBotMessage("Metadata Menu:", {
      widget: "metadataMenuWidget",
    });
    this.addMessage(message);
  };

  showToolSubmenu = (toolJsonFile) => {
    const message = this.createChatBotMessage("Tool Details:", {
      widget: "toolSubmenuWidget",
      payload: toolJsonFile,
    });
    this.addMessage(message);
  };

  showMetadataSubmenu = (metadataJsonFile) => {
    const message = this.createChatBotMessage("Dataset Details:", {
      widget: "metadataSubmenuWidget",
      payload: metadataJsonFile,
    });
    this.addMessage(message);
  };

  clearChat = () => {
    this.setState((prev) => ({
      ...prev,
      messages: [
        this.createChatBotMessage("Hi! I can help you with:", {
          widget: "mainMenu",
        }),
      ],
    }));
  };

  addMessage = (message) => {
    this.setState((prev) => ({
      ...prev,
      messages: [...prev.messages, message],
    }));
  };
}

export default ActionProvider;



class MessageParser {
  constructor(actionProvider) {
    this.actionProvider = actionProvider;
  }

  parse(message) {
    const lowerCaseMessage = message.toLowerCase();

    if (lowerCaseMessage.includes("hi") || lowerCaseMessage.includes("hello")) {
      this.actionProvider.greet();
    } else if (lowerCaseMessage.includes("metadata")) {
      this.actionProvider.showMetadataMenu();
    } else if (lowerCaseMessage.includes("tool")) {
      this.actionProvider.showToolsMenu();
    } else {
      this.actionProvider.greet(); // default
    }
  }
}

export default MessageParser;



import { createChatBotMessage } from "react-chatbot-kit";
import MainMenu from "./MainMenu";
import ToolsMenuWidget from "./ToolsMenuWidget";
import MetadataMenuWidget from "./MetadataMenuWidget";
import ToolSubmenuWidget from "./ToolSubmenuWidget";
import MetadataSubmenuWidget from "./MetadataSubmenuWidget";

const config = {
  botName: "Metadata Bot",
  initialMessages: [
    createChatBotMessage("Hi! I can help you with:", { widget: "mainMenu" }),
  ],
  customStyles: {
    botMessageBox: { backgroundColor: "#007bff" },
    chatButton: { backgroundColor: "#007bff" },
  },
  widgets: [
    { widgetName: "mainMenu", widgetFunc: (props) => <MainMenu {...props} /> },
    { widgetName: "toolsMenuWidget", widgetFunc: (props) => <ToolsMenuWidget {...props} /> },
    { widgetName: "metadataMenuWidget", widgetFunc: (props) => <MetadataMenuWidget {...props} /> },
    { widgetName: "toolSubmenuWidget", widgetFunc: (props) => <ToolSubmenuWidget {...props} /> },
    { widgetName: "metadataSubmenuWidget", widgetFunc: (props) => <MetadataSubmenuWidget {...props} /> },
  ],
};

export default config;


import React from "react";

const MainMenu = (props) => {
  const options = [
    { text: "Help about Tool", handler: props.actionProvider.showToolsMenu, id: 1 },
    { text: "Metadata", handler: props.actionProvider.showMetadataMenu, id: 2 },
  ];

  return (
    <div style={{ padding: "10px" }}>
      {options.map((option) => (
        <button
          key={option.id}
          onClick={option.handler}
          style={{
            margin: "5px",
            padding: "8px 14px",
            borderRadius: "6px",
            border: "1px solid #007bff",
            background: "#f0f8ff",
            cursor: "pointer",
          }}
        >
          {option.text}
        </button>
      ))}
    </div>
  );
};

export default MainMenu;



import React from "react";

const ToolsMenuWidget = (props) => {
  const tools = [
    { name: "Query/Code Generation", json: "queryGeneration.json" },
    { name: "Query/Code Summarization", json: "querySummarization.json" },
    { name: "Query/Code Conversion", json: "queryConversion.json" },
    { name: "Query/Code Optimization", json: "queryOptimization.json" },
  ];

  return (
    <div style={{ padding: "10px" }}>
      {tools.map((tool, index) => (
        <button
          key={index}
          onClick={() => props.actionProvider.showToolSubmenu(tool.json)}
          style={{
            margin: "5px",
            padding: "8px 14px",
            borderRadius: "6px",
            border: "1px solid #007bff",
            background: "#e3f2fd",
            cursor: "pointer",
          }}
        >
          {tool.name}
        </button>
      ))}

      <button
        onClick={props.actionProvider.clearChat}
        style={{
          marginTop: "10px",
          padding: "6px 12px",
          borderRadius: "6px",
          border: "1px solid #007bff",
          background: "#f0f8ff",
          cursor: "pointer",
        }}
      >
        ðŸ”„ Back to Main Menu
      </button>
    </div>
  );
};

export default ToolsMenuWidget;


import React from "react";

const MetadataMenuWidget = (props) => {
  const datasets = [
    { name: "Brokerage Dataset", json: "brokerage.json" },
    { name: "WIM Client Dataset", json: "wimClient.json" },
  ];

  return (
    <div style={{ padding: "10px" }}>
      {datasets.map((dataset, index) => (
        <button
          key={index}
          onClick={() => props.actionProvider.showMetadataSubmenu(dataset.json)}
          style={{
            margin: "5px",
            padding: "8px 14px",
            borderRadius: "6px",
            border: "1px solid #28a745",
            background: "#e8f5e9",
            cursor: "pointer",
          }}
        >
          {dataset.name}
        </button>
      ))}

      <button
        onClick={props.actionProvider.clearChat}
        style={{
          marginTop: "10px",
          padding: "6px 12px",
          borderRadius: "6px",
          border: "1px solid #28a745",
          background: "#f0fff0",
          cursor: "pointer",
        }}
      >
        ðŸ”„ Back to Main Menu
      </button>
    </div>
  );
};

export default MetadataMenuWidget;


import React, { useEffect, useState } from "react";

const ToolSubmenuWidget = ({ widgetState, actionProvider }) => {
  const [toolData, setToolData] = useState(null);

  useEffect(() => {
    import(`./toolsJson/${widgetState.payload}`)
      .then((data) => setToolData(data.default))
      .catch((err) => console.error(err));
  }, [widgetState.payload]);

  if (!toolData) return <div>Loading...</div>;

  return (
    <div style={{ padding: "10px" }}>
      <h4>{toolData.name}</h4>
      <p><strong>Description:</strong> {toolData.description}</p>
      <p><strong>Features:</strong></p>
      <ul>
        {toolData.features.map((f, i) => (
          <li key={i}>{f}</li>
        ))}
      </ul>

      <button
        onClick={actionProvider.clearChat}
        style={{
          marginTop: "10px",
          padding: "6px 12px",
          borderRadius: "6px",
          border: "1px solid #007bff",
          background: "#f0f8ff",
          cursor: "pointer",
        }}
      >
        ðŸ”„ Back to Main Menu
      </button>
    </div>
  );
};

export default ToolSubmenuWidget;




import React, { useEffect, useState } from "react";

const MetadataSubmenuWidget = ({ widgetState, actionProvider }) => {
  const [metadata, setMetadata] = useState(null);

  useEffect(() => {
    import(`./metadataJson/${widgetState.payload}`)
      .then((data) => setMetadata(data.default))
      .catch((err) => console.error(err));
  }, [widgetState.payload]);

  if (!metadata) return <div>Loading...</div>;

  return (
    <div style={{ padding: "10px" }}>
      <h4>{metadata.name}</h4>
      <p><strong>Server:</strong> {metadata.server}</p>
      <p><strong>Schema:</strong> {metadata.schema}</p>
      <p><strong>Description:</strong> {metadata.description}</p>
      <p><strong>Columns:</strong></p>
      <ul>
        {metadata.columns.map((col, i) => (
          <li key={i}>
            <strong>{col.name}</strong>: {col.description}
          </li>
        ))}
      </ul>

      <button
        onClick={actionProvider.clearChat}
        style={{
          marginTop: "10px",
          padding: "6px 12px",
          borderRadius: "6px",
          border: "1px solid #28a745",
          background: "#f0fff0",
          cursor: "pointer",
        }}
      >
        ðŸ”„ Back to Main Menu
      </button>
    </div>
  );
};

export default MetadataSubmenuWidget;
