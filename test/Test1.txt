using System;
using System.Data;
using System.Data.SqlClient;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Text;
using System.Text.Json;
using System.Text.Json.Nodes;
using Microsoft.SqlServer.Dts.Runtime;

public void Main()
{
    string tenantId = "your-tenant-id";
    string clientId = "your-client-id";
    string clientSecret = "your-client-secret";
    string siteName = "yoursite.sharepoint.com:/sites/yoursite";
    string listName = "your-list-name";
    string sqlConnString = "Server=your-sql-server;Database=your-db;Integrated Security=true;";
    string storedProc = "YourInsertListItemProc";

    try
    {
        string token = GetAccessToken(tenantId, clientId, clientSecret);
        string siteId = GetSiteId(token, siteName);
        FetchAndInsertListItems(siteId, token, listName, sqlConnString, storedProc);
        Dts.TaskResult = (int)ScriptResults.Success;
    }
    catch (Exception ex)
    {
        Dts.Events.FireError(0, "Script Task", ex.Message, "", 0);
        Dts.TaskResult = (int)ScriptResults.Failure;
    }
}

string GetAccessToken(string tenantId, string clientId, string clientSecret)
{
    using (var client = new HttpClient())
    {
        var content = new StringContent(
            $"client_id={clientId}&scope=https%3A%2F%2Fgraph.microsoft.com%2F.default&client_secret={clientSecret}&grant_type=client_credentials",
            Encoding.UTF8, "application/x-www-form-urlencoded");

        var response = client.PostAsync($"https://login.microsoftonline.com/{tenantId}/oauth2/v2.0/token", content).Result;
        var json = response.Content.ReadAsStringAsync().Result;
        var doc = JsonDocument.Parse(json);
        return doc.RootElement.GetProperty("access_token").GetString();
    }
}

string GetSiteId(string token, string siteName)
{
    using (var client = new HttpClient())
    {
        client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
        string url = $"https://graph.microsoft.com/v1.0/sites/{siteName}";
        var response = client.GetStringAsync(url).Result;
        var doc = JsonDocument.Parse(response);
        return doc.RootElement.GetProperty("id").GetString();
    }
}

void FetchAndInsertListItems(string siteId, string token, string listName, string sqlConnString, string storedProc)
{
    string nextLink = $"https://graph.microsoft.com/v1.0/sites/{siteId}/lists/{listName}/items?expand=fields&$top=5000";

    using (var client = new HttpClient())
    using (var conn = new SqlConnection(sqlConnString))
    {
        client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
        conn.Open();

        while (!string.IsNullOrEmpty(nextLink))
        {
            var response = client.GetStringAsync(nextLink).Result;
            var root = JsonNode.Parse(response).AsObject();

            foreach (var item in root["value"].AsArray())
            {
                string itemJson = item["fields"].ToJsonString();

                using (var cmd = new SqlCommand(storedProc, conn))
                {
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.AddWithValue("@ItemJson", itemJson);
                    cmd.ExecuteNonQuery();
                }
            }

            nextLink = root.ContainsKey("@odata.nextLink") ? root["@odata.nextLink"]?.ToString() : null;
        }
    }
}
