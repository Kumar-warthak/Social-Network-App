Sub ApplyDynamicRules()
    Dim wsData As Worksheet, wsRules As Worksheet
    Dim lastRowData As Long, lastRowRules As Long
    Dim i As Long, j As Long
    Dim rule As String, evalRule As String
    Dim matchFound As Boolean
    Dim colHeaders As Object
    Dim cell As Range, key As Variant
    Dim ruleParts As Variant, part As Variant
    Dim value As Variant
    Dim safeRule As String
    
    ' Set worksheets
    Set wsData = ThisWorkbook.Sheets("Sheet1")
    Set wsRules = ThisWorkbook.Sheets("Sheet2")

    ' Get last row of data and rules
    lastRowData = wsData.Cells(wsData.Rows.Count, 1).End(xlUp).Row
    lastRowRules = wsRules.Cells(wsRules.Rows.Count, 13).End(xlUp).Row ' Column M (13)

    ' Create a dictionary to store column names and indexes
    Set colHeaders = CreateObject("Scripting.Dictionary")

    ' Store column names from the first row of Sheet1
    For Each cell In wsData.Rows(1).Cells
        If cell.Value <> "" Then
            colHeaders(cell.Value) = cell.Column
        End If
    Next cell

    ' Loop through each row in Sheet1
    For i = 2 To lastRowData ' Assuming row 1 has headers
        matchFound = False ' Reset match flag

        ' Loop through each rule in Sheet2 (Column M)
        For j = 1 To lastRowRules
            ' Get rule from Column M
            rule = Trim(wsRules.Cells(j, 13).Value)
            
            ' Skip empty rules
            If rule = "" Then Exit For

            ' Start evalRule as the base rule
            evalRule = rule

            ' Split rule into parts (words)
            ruleParts = Split(evalRule, " ")
            
            ' Process each part of the rule
            For Each part In ruleParts
                If colHeaders.exists(part) Then
                    value = wsData.Cells(i, colHeaders(part)).Value
                    
                    ' Handle text vs. number types correctly
                    If IsNumeric(value) Then
                        evalRule = Replace(evalRule, part & "=", part & "=" & value) ' No quotes for numbers
                    Else
                        evalRule = Replace(evalRule, part & "=", part & "=""" & value & """") ' Wrap text in quotes
                    End If
                End If
            Next part

            ' Debug final evaluated rule before execution
            Debug.Print "Evaluating: " & evalRule

            ' Validate rule format before evaluating
            safeRule = Replace(evalRule, " And ", " AND ")
            safeRule = Replace(safeRule, " Or ", " OR ")

            ' Try evaluation safely
            On Error Resume Next
            If Application.Evaluate(safeRule) Then
                ' If match found, update Column AC in Sheet1 with Column A from Sheet2
                wsData.Cells(i, 29).Value = wsRules.Cells(j, 1).Value ' Column AC = 29
                matchFound = True
                Exit For ' Stop checking further rules for this row
            End If
            On Error GoTo 0
        Next j
    Next i

    MsgBox "Rules applied successfully!", vbInformation
End Sub
