using System;
using System.Data;
using System.IO;
using Microsoft.SqlServer.Dts.Runtime;
using System.Text;

public void Main()
{
    // Define file path
    string filePath = Dts.Variables["User::FilePath"].Value.ToString();

    // Read all lines from the CSV file
    var lines = File.ReadAllLines(filePath);

    // Split the header line
    var header = lines[0].Split(',');

    // Rename columns in the header if needed
    for (int i = 0; i < header.Length; i++)
    {
        if (header[i] == "OldDateColumn")
        {
            header[i] = "NewDateColumn";
        }
        if (header[i] == "OldColumnName1")
        {
            header[i] = "NewColumnName1";
        }
        if (header[i] == "OldColumnName2")
        {
            header[i] = "NewColumnName2";
        }
        // Add more column renames as needed
    }

    // Write back the updated header
    lines[0] = string.Join(",", header);

    // Process each data line
    for (int i = 1; i < lines.Length; i++)
    {
        var columns = lines[i].Split(',');

        // Assuming date is in the first column
        DateTime dateValue;
        if (DateTime.TryParse(columns[0], out dateValue))
        {
            columns[0] = dateValue.ToString("MM/dd/yyyy");
        }

        // Join the columns back into a line
        lines[i] = string.Join(",", columns);
    }

    // Write all lines back to the file
    File.WriteAllLines(filePath, lines, Encoding.UTF8);

    Dts.TaskResult = (int)ScriptResults.Success;
}



using System;
using System.Data;
using System.Data.OleDb;
using System.IO;
using Microsoft.SqlServer.Dts.Runtime;
using System.Linq; // Make sure to include this namespace

public void Main()
{
    // Define file paths and connection string
    string tempFilePath = Dts.Variables["User::TempFilePath"].Value.ToString();
    string connectionString = Dts.Variables["User::ConnectionString"].Value.ToString();

    // Read all lines from the temporary CSV file
    var lines = File.ReadAllLines(tempFilePath);

    // Prepare the SQL insert command
    string sqlInsert = "INSERT INTO YourTableName (NewDateColumn, NewColumnName1, NewColumnName2) VALUES (?, ?, ?)";

    using (OleDbConnection conn = new OleDbConnection(connectionString))
    {
        conn.Open();
        foreach (var line in lines.Skip(1)) // Skip the header line
        {
            var columns = line.Split(',');

            using (OleDbCommand cmd = new OleDbCommand(sqlInsert, conn))
            {
                cmd.Parameters.AddWithValue("?", columns[0]);
                cmd.Parameters.AddWithValue("?", columns[1]);
                cmd.Parameters.AddWithValue("?", columns[2]);
                // Add more parameters as needed

                cmd.ExecuteNonQuery();
            }
        }
    }

    Dts.TaskResult = (int)ScriptResults.Success;
}
