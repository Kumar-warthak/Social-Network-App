using System;
using System.Data;
using System.Data.OleDb;
using System.Globalization;
using System.IO;
using System.Linq;

public void Main()
{
    // Define file paths and connection string
    string tempFilePath = Dts.Variables["User::TempFilePath"].Value.ToString();
    string outputCsvFilePath = Dts.Variables["User::OutputCsvFilePath"].Value.ToString();
    string connectionString = Dts.Variables["User::ConnectionString"].Value.ToString();

    // Read all lines from the temporary CSV file
    var lines = File.ReadAllLines(tempFilePath);

    using (OleDbConnection conn = new OleDbConnection(connectionString))
    {
        conn.Open();

        // Set the NLS_DATE_FORMAT for the session
        using (OleDbCommand setDateFormatCmd = new OleDbCommand("ALTER SESSION SET NLS_DATE_FORMAT = 'MM/DD/YYYY'", conn))
        {
            setDateFormatCmd.ExecuteNonQuery();
        }

        // Prepare SQL insert command template
        string sqlInsertTemplate = "INSERT INTO YourTableName (NewDateColumn, Column2, Column3, Column4, Column5, " +
                                   "Column6, Column7, Column8, Column9, Column10, Column11, Column12, Column13, " +
                                   "Column14, Column15, Column16, Column17, Column18, Column19, Column20) VALUES ({0})";

        // Open the output CSV file for writing
        using (StreamWriter writer = new StreamWriter(outputCsvFilePath, false)) // false to overwrite the file if it exists
        {
            foreach (var line in lines.Skip(1)) // Skip the header line
            {
                var columns = line.Split(',');

                // Trim all columns
                for (int i = 0; i < columns.Length; i++)
                {
                    columns[i] = columns[i].Trim();
                }

                // Parse and format the date column with leading zeros
                DateTime dateValue;
                if (DateTime.TryParseExact(columns[0], "MM/dd/yyyy", CultureInfo.InvariantCulture, DateTimeStyles.None, out dateValue))
                {
                    columns[0] = dateValue.ToString("MM/dd/yyyy"); // Ensures leading zeros
                }
                else
                {
                    throw new Exception("Date format is invalid: " + columns[0]);
                }

                // Escape single quotes in columns to avoid SQL syntax errors
                for (int i = 0; i < columns.Length; i++)
                {
                    columns[i] = columns[i].Replace("'", "''");
                }

                // Construct the SQL insert statement with actual values
                string sqlInsert = string.Format(sqlInsertTemplate, string.Join(", ", columns.Select(col => $"'{col}'")));

                // Write the SQL insert statement to the output CSV file
                writer.WriteLine(sqlInsert);

                // Execute the SQL insert statement
                using (OleDbCommand cmd = new OleDbCommand(sqlInsert, conn))
                {
                    cmd.ExecuteNonQuery();
                }
            }
        }
    }

    Dts.TaskResult = (int)ScriptResults.Success;
}
