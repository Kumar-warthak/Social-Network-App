using System;
using System.IO;
using System.Net;
using System.Text;
using System.Web.Script.Serialization;
using System.Collections.Generic;

public void Main()
{
    try
    {
        string clientId = "your-client-id";
        string clientSecret = "your-client-secret";
        string tenantId = "your-tenant-id";
        string tenantDomain = "yourcompany.sharepoint.com";
        string siteName = "YourSiteName";
        string documentLibraryName = "Documents";
        string filePath = @"C:\Your\Local\Path\file.txt";
        string uploadFileName = "file.txt";

        // ---------------------------
        // 1. Get access token (OAuth2)
        // ---------------------------
        string tokenUrl = $"https://login.microsoftonline.com/{tenantId}/oauth2/v2.0/token";

        string postData = $"client_id={clientId}&scope=https://graph.microsoft.com/.default&client_secret={clientSecret}&grant_type=client_credentials";
        byte[] postBytes = Encoding.UTF8.GetBytes(postData);

        HttpWebRequest tokenRequest = (HttpWebRequest)WebRequest.Create(tokenUrl);
        tokenRequest.Method = "POST";
        tokenRequest.ContentType = "application/x-www-form-urlencoded";
        tokenRequest.ContentLength = postBytes.Length;

        using (Stream requestStream = tokenRequest.GetRequestStream())
        {
            requestStream.Write(postBytes, 0, postBytes.Length);
        }

        string accessToken = null;
        using (WebResponse response = tokenRequest.GetResponse())
        using (StreamReader reader = new StreamReader(response.GetResponseStream()))
        {
            string json = reader.ReadToEnd();
            var tokenData = new JavaScriptSerializer().Deserialize<Dictionary<string, object>>(json);
            accessToken = tokenData["access_token"].ToString();
        }

        // ---------------------------------
        // 2. Get site ID using site name
        // ---------------------------------
        string siteId = null;
        string siteUrl = $"https://graph.microsoft.com/v1.0/sites/{tenantDomain}:/sites/{siteName}?$select=id";

        HttpWebRequest siteRequest = (HttpWebRequest)WebRequest.Create(siteUrl);
        siteRequest.Method = "GET";
        siteRequest.Headers.Add("Authorization", "Bearer " + accessToken);

        using (WebResponse siteResp = siteRequest.GetResponse())
        using (StreamReader reader = new StreamReader(siteResp.GetResponseStream()))
        {
            string siteJson = reader.ReadToEnd();
            var siteData = new JavaScriptSerializer().Deserialize<Dictionary<string, object>>(siteJson);
            siteId = siteData["id"].ToString();
        }

        // -----------------------------------
        // 3. Get document library (drive) ID
        // -----------------------------------
        string driveId = null;
        string driveUrl = $"https://graph.microsoft.com/v1.0/sites/{siteId}/drives";

        HttpWebRequest driveRequest = (HttpWebRequest)WebRequest.Create(driveUrl);
        driveRequest.Method = "GET";
        driveRequest.Headers.Add("Authorization", "Bearer " + accessToken);

        using (WebResponse driveResp = driveRequest.GetResponse())
        using (StreamReader reader = new StreamReader(driveResp.GetResponseStream()))
        {
            string driveJson = reader.ReadToEnd();
            var driveDict = new JavaScriptSerializer().Deserialize<Dictionary<string, object>>(driveJson);
            var driveList = (object[])driveDict["value"];
            foreach (Dictionary<string, object> drive in driveList)
            {
                if (drive["name"].ToString().Equals(documentLibraryName, StringComparison.OrdinalIgnoreCase))
                {
                    driveId = drive["id"].ToString();
                    break;
                }
            }
        }

        if (driveId == null)
        {
            Console.WriteLine("Document library not found.");
            Dts.TaskResult = (int)ScriptResults.Failure;
            return;
        }

        // -------------------------------
        // 4. Upload the file to SharePoint
        // -------------------------------
        string uploadUrl = $"https://graph.microsoft.com/v1.0/drives/{driveId}/root:/{uploadFileName}:/content";

        byte[] fileBytes = File.ReadAllBytes(filePath);

        HttpWebRequest uploadRequest = (HttpWebRequest)WebRequest.Create(uploadUrl);
        uploadRequest.Method = "PUT";
        uploadRequest.Headers.Add("Authorization", "Bearer " + accessToken);
        uploadRequest.ContentType = "application/octet-stream";
        uploadRequest.ContentLength = fileBytes.Length;

        using (Stream requestStream = uploadRequest.GetRequestStream())
        {
            requestStream.Write(fileBytes, 0, fileBytes.Length);
        }

        using (WebResponse uploadResponse = uploadRequest.GetResponse())
        using (StreamReader reader = new StreamReader(uploadResponse.GetResponseStream()))
        {
            Console.WriteLine("Upload successful.");
            Dts.TaskResult = (int)ScriptResults.Success;
        }
    }
    catch (Exception ex)
    {
        Console.WriteLine("Error: " + ex.Message);
        Dts.TaskResult = (int)ScriptResults.Failure;
    }
}
