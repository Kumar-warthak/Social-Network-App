using System;
using System.Data;
using System.Data.OleDb;
using System.Data.OracleClient; // Ensure you have OracleClient installed or use Oracle.ManagedDataAccess.Client
using System.IO;
using Microsoft.SqlServer.Dts.Runtime;
using Microsoft.VisualBasic.FileIO;

public void Main()
{
    // Variables
    string csvFilePath = Dts.Variables["User::CSVFilePath"].Value.ToString();
    string oracleConnectionString = Dts.Variables["User::OracleConnectionString"].Value.ToString();

    // Read CSV file
    DataTable csvData = new DataTable();
    try
    {
        using (TextFieldParser parser = new TextFieldParser(csvFilePath))
        {
            parser.TextFieldType = FieldType.Delimited;
            parser.SetDelimiters(",");
            parser.HasFieldsEnclosedInQuotes = true;
            parser.TrimWhiteSpace = true;

            // Load CSV header
            string[] headers = parser.ReadFields();
            foreach (string header in headers)
            {
                csvData.Columns.Add(header);
            }

            // Load CSV data rows
            while (!parser.EndOfData)
            {
                string[] fields = parser.ReadFields();
                csvData.Rows.Add(fields);
            }
        }

        // Insert data into Oracle DB
        using (OracleConnection conn = new OracleConnection(oracleConnectionString))
        {
            conn.Open();
            foreach (DataRow row in csvData.Rows)
            {
                using (OracleCommand cmd = new OracleCommand())
                {
                    cmd.Connection = conn;
                    cmd.CommandText = "INSERT INTO YourTable (Column1, Column2, Column3) VALUES (:1, :2, :3)";

                    // Map each column to parameters
                    for (int i = 0; i < csvData.Columns.Count; i++)
                    {
                        cmd.Parameters.Add(new OracleParameter($":{i + 1}", row[i]));
                    }

                    cmd.ExecuteNonQuery();
                }
            }
        }
    }
    catch (Exception ex)
    {
        Dts.Events.FireError(0, "Script Task", ex.Message + "\r" + ex.StackTrace, string.Empty, 0);
        Dts.TaskResult = (int)ScriptResults.Failure;
        return;
    }

    Dts.TaskResult = (int)ScriptResults.Success;
}
